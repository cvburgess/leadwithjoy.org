---
layout: base.vto
---

<div class="mt-16 mb-28 flex flex-col gap-16">
  <h1 class="text-center text-4xl font-black">{{ title }}</h1>
  <div class="divider">
    <img class="h-20 w-20 mx-16" src="/img/icons/{{ type }}.svg" aria-hidden="true" alt="{{ type }} icon"/>
  </div>
</div>

<div class="flex flex-wrap">

  {{ if videoId }}
    <div class="flex mt-8 w-full rounded-box shadow-md p-4 bg-base-200 aspect-[500/315] overflow-hidden">
      <iframe class="w-full h-full rounded-lg" src="https://www.youtube-nocookie.com/embed/{{ videoId }}" frameborder="no" allow="accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
    </div>
  {{ /if }}

  {{ if episodeId }}
    <div class="mt-8 rounded-box shadow-md p-4 w-full h-[200px] overflow-hidden bg-base-200">
      <iframe class="w-full h-[200px] rounded-lg" frameborder="no" scrolling="no" src="https://player.captivate.fm/episode/{{ episodeId }}"></iframe>
    </div>
  {{ /if }}

  {{ if toc && toc.length }}
    <nav class="sticky top-16 self-start w-1/3 max-w-64 mr-8 hidden sm:flex">
      <ol class="list-none p-0 m-0">
        {{ for item of toc }}
          <li class="mb-4">
            <a href="#{{ item.slug }}" class="flex font-normal text-sm text-base-content no-underline hover:text-primary transition-all duration-50 text-balance leading-6">{{ item.text }}</a>
            {{ if item.children && item.children.length }}
              <ul class="list-none mt-4 pl-4">
                {{ for child of item.children }}
                  <li class="mb-4">
                    <a href="#{{ child.slug }}" class="flex font-normal text-sm text-base-content no-underline hover:text-primary transition-all duration-50 text-balance leading-6">{{ child.text }}</a>
                  </li>
                {{ /for }}
              </ul>
            {{ /if }}
          </li>
        {{ /for }}
      </ol>
    </nav>
  {{ /if }}

  <div class="flex-1 prose prose-a:text-primary prose-headings:font-black prose-headings:text-primary prose-strong:font-bold">
    {{ content }}
  </div>

</div>

{{ set tagsQuery = tags ? tags.map(tag => tag.includes(" ") ? `'${tag}'` : tag).join("|") : "" }}
{{ set searchTerm = `title!='${title}' type=crash-course|playbook|deep-dive|guide ${tagsQuery}` }}
{{ set relatedPosts = search.pages(searchTerm, "date", 3) }}

{{ if relatedPosts && relatedPosts.length }}
  <div class="divider mt-24 mb-8">
    <h2 class="text-primary text-center text-3xl font-black mx-16">Dive a little deeper</h2>
  </div>
  <p class="text-center text-subtext font-normal text-lg italic my-2 mb-8">Related posts, videos, and podcast episodes</p>

  <div class="flex flex-col">
    {{ for post of relatedPosts }}
      {{ comp.card({ title: post.title, description: post.description, icon: post.type, url: post.url }) }}
    {{ /for }}
  </div>
{{ /if }}

<div class="flex items-center justify-center flex-wrap my-16 print:hidden">
  <a class="mx-4 text-lg font-bold link-hover text-primary" href="/lead-with-joy">← Back to the Hub</a>
  <span class="mx-4 text-lg hidden sm:inline"> • </span>
  <a class="mx-4 text-lg font-bold link-hover text-primary" href="{{ metadata.repoUrl }}/blob/main/src{{ inputPath }}">Suggest an Edit on GitHub</a>
</div>

<div class="print:flex print:justify-center print:items-center hidden my-4">
  <p>Charles Burgess © 2025</p>
</div>

<script>
  window.addEventListener('DOMContentLoaded', () => {

    const observer = new IntersectionObserver(entries => {
      entries.forEach(entry => {
        const id = entry
          .target
          .getAttribute('id');
        if (entry.intersectionRatio > 0) {
          document
            .querySelector(`nav li a[href="#${id}"]`)
            .classList
            .add('text-primary');
          document
            .querySelector(`nav li a[href="#${id}"]`)
            .classList
            .add('font-medium');
        } else {
          document
            .querySelector(`nav li a[href="#${id}"]`)
            .classList
            .remove('text-primary');
          document
            .querySelector(`nav li a[href="#${id}"]`)
            .classList
            .remove('font-medium');
        }
      });
    });

    // Track all sections that have an `id` applied
    document
      .querySelectorAll('h2[id], h3[id]')
      .forEach((section) => {
        observer.observe(section);
      });

  });
</script>
